/* Hey Emacs use -*- mode: C -*- */
/*
 * Copyright 2024-2027 Asterfusion Network
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** \file
    This file defines the vpp control-plane API messages
    used to control the spi plugin
*/

option version = "1.0.0";

import "vnet/interface_types.api";
import "vnet/ip/ip_types.api";

enum spi_support_session_proto_type
{
    API_SPI_SUPPORT_TYPE_TCP = 0,
    API_SPI_SUPPORT_TYPE_UDP = 1,
    API_SPI_SUPPORT_TYPE_ICMP = 2,
    API_SPI_SUPPORT_TYPE_OTHER = 3,
};

autoreply define spi_session_enable_disable {
    u32 client_index;
    u32 context;
    bool is_enable;
    bool handoff_enabled;
    u32 max_sessions_per_thread;
    u32 timer_process_frequency;
};

autoreply define spi_session_proto_enable_disable {
    u32 client_index;
    u32 context;
    bool is_enable;
    vl_api_spi_support_session_proto_type_t type;
};

autoreply define spi_set_session_timeouts {
    u32 client_index;
    u32 context;
    bool use_default;
    u32 tcp_transitory;
    u32 tcp_established;
    u32 tcp_closing;
    u32 udp;
    u32 icmp;
    u32 other;
};

autoreply define spi_add_del_3tuple_timeouts {
    u32 client_index;
    u32 context;
    bool is_add;
    vl_api_address_t ip_address;
    u16 port;
    u8  proto;
    u32 timeout;
};

define spi_get_session_number {
    u32 client_index;
    u32 context;
    
    /* filter */
    bool ip_filter;
    vl_api_address_family_t af;

    /* proto filter */
    bool proto_filter;
    vl_api_spi_support_session_proto_type_t type;
};

define spi_get_session_number_reply
{
  u32 context;
  i32 retval;
  u64 session_num;
};
